reduce.nn               package:class               R Documentation

_R_e_d_u_c_e _T_r_a_i_n_i_n_g _S_e_t _f_o_r _a _k-_N_N _C_l_a_s_s_i_f_i_e_r

_D_e_s_c_r_i_p_t_i_o_n:

     Reduce training set for a k-NN classifier. Used after 'condense'.

_U_s_a_g_e:

     reduce.nn(train, ind, class)

_A_r_g_u_m_e_n_t_s:

   train: matrix for training set 

     ind: Initial list of members of the training set (from
          'condense'). 

   class: vector of classifications for test set 

_D_e_t_a_i_l_s:

     All the members of the training set are tried in random order. Any
     which when dropped do not cause any members of the training set to
     be wrongly classified are dropped.

_V_a_l_u_e:

     index vector of cases to be retained.

_R_e_f_e_r_e_n_c_e_s:

     Gates, G.W. (1972) The reduced nearest neighbor rule. _IEEE Trans.
     Information Theory_ *IT-18*, 431-432.

     Ripley, B. D. (1996) _Pattern Recognition and Neural Networks._
     Cambridge.

     Venables, W. N. and Ripley, B. D. (2002) _Modern Applied
     Statistics with S._ Fourth edition.  Springer.

_S_e_e _A_l_s_o:

     'condense', 'multiedit'

_E_x_a_m_p_l_e_s:

     train <- rbind(iris3[1:25,,1], iris3[1:25,,2], iris3[1:25,,3])
     test <- rbind(iris3[26:50,,1], iris3[26:50,,2], iris3[26:50,,3])
     cl <- factor(c(rep("s",25), rep("c",25), rep("v",25)))
     keep <- condense(train, cl)
     knn(train[keep,], test, cl[keep])
     keep2 <- reduce.nn(train, keep, cl)
     knn(train[keep2,], test, cl[keep2])

